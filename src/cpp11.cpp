// Generated by cpp11: do not edit by hand


#include "cpp11/declarations.hpp"

// parse.cpp
cpp11::writable::doubles pz_parse_lat(cpp11::strings x);
extern "C" SEXP _parzer_pz_parse_lat(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_parse_lat(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}
// parse.cpp
cpp11::writable::doubles pz_parse_lon(cpp11::strings x);
extern "C" SEXP _parzer_pz_parse_lon(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_parse_lon(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}
// pz_hemisphere.cpp
cpp11::strings pz_hemisphere(cpp11::strings lon, cpp11::strings lat);
extern "C" SEXP _parzer_pz_hemisphere(SEXP lon, SEXP lat) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_hemisphere(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(lon)), cpp11::unmove(cpp11::as_cpp<cpp11::strings>(lat))));
  END_CPP11
}
// pz_parse_parts.cpp
cpp11::list split_decimal_degree(float x, std::string fmt);
extern "C" SEXP _parzer_split_decimal_degree(SEXP x, SEXP fmt) {
  BEGIN_CPP11
    return cpp11::as_sexp(split_decimal_degree(cpp11::unmove(cpp11::as_cpp<float>(x)), cpp11::unmove(cpp11::as_cpp<std::string>(fmt))));
  END_CPP11
}
// pz_parse_parts.cpp
cpp11::data_frame pz_parse_parts_lat(cpp11::strings x);
extern "C" SEXP _parzer_pz_parse_parts_lat(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_parse_parts_lat(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}
// pz_parse_parts.cpp
cpp11::data_frame pz_parse_parts_lon(cpp11::strings x);
extern "C" SEXP _parzer_pz_parse_parts_lon(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_parse_parts_lon(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}
// pz_parse_parts.cpp
cpp11::list pz_play(cpp11::strings x);
extern "C" SEXP _parzer_pz_play(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_play(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}
// pz_split_llstr.cpp
cpp11::data_frame pz_split_llstr(cpp11::strings x);
extern "C" SEXP _parzer_pz_split_llstr(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(pz_split_llstr(cpp11::unmove(cpp11::as_cpp<cpp11::strings>(x))));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _parzer_pz_hemisphere(SEXP, SEXP);
extern SEXP _parzer_pz_parse_lat(SEXP);
extern SEXP _parzer_pz_parse_lon(SEXP);
extern SEXP _parzer_pz_parse_parts_lat(SEXP);
extern SEXP _parzer_pz_parse_parts_lon(SEXP);
extern SEXP _parzer_pz_play(SEXP);
extern SEXP _parzer_pz_split_llstr(SEXP);
extern SEXP _parzer_split_decimal_degree(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_parzer_pz_hemisphere",        (DL_FUNC) &_parzer_pz_hemisphere,        2},
    {"_parzer_pz_parse_lat",         (DL_FUNC) &_parzer_pz_parse_lat,         1},
    {"_parzer_pz_parse_lon",         (DL_FUNC) &_parzer_pz_parse_lon,         1},
    {"_parzer_pz_parse_parts_lat",   (DL_FUNC) &_parzer_pz_parse_parts_lat,   1},
    {"_parzer_pz_parse_parts_lon",   (DL_FUNC) &_parzer_pz_parse_parts_lon,   1},
    {"_parzer_pz_play",              (DL_FUNC) &_parzer_pz_play,              1},
    {"_parzer_pz_split_llstr",       (DL_FUNC) &_parzer_pz_split_llstr,       1},
    {"_parzer_split_decimal_degree", (DL_FUNC) &_parzer_split_decimal_degree, 2},
    {NULL, NULL, 0}
};
}

extern "C" void R_init_parzer(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
